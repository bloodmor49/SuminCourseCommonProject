
///////////////////////////// 1. Di DAGGER 2 ///////////////////////////////////////////////////////

В программах многие классы зависят от других. Например компьютер зависит от его комплектующиъ, т.е.
компьютер без системного блока существовать не может.

Правильным тоном считается, что все зависимости вводятся туда извне, а не в самом классе. Т.е.
компьютер не должен в себе же создавать системный блок. Системный блок должен поставляться в компью -
тер извне. Для этого и используется инъекция зависимостей, а также библиотека Dagger 2.

Обычая схема создания передачи данных будет выглядеть так:

            Activity > Presenter

Т.е. Activity создает Presenter самостоятельно. При использовании даггера схема будет выглядеть так:

            Activity -> Component -> Module -> Presenter

Activity обращается к компоненту (appComponent в примере выше),
компонент с помощью модулей создает Presenter (и все остальные необходимые для этого объекты)
и возвращает его в Activity.








